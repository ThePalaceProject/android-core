name: Create Release
on: workflow_dispatch
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - name: Verify release branch
        run: .ci/ci-verify-release-branch.sh
      - name: Finish release
        run: .ci/ci-release-finish.sh --tag
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NOTES_PATH: ${{ env.RELEASE_NOTES_PATH }}
          TAG_NAME: ${{ env.TAG_NAME }}
          VERSION_NUM: ${{ env.VERSION_NUM }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: ${{ env.VERSION_NUM }}
          body_path: ${{ env.RELEASE_NOTES_PATH }}
          draft: false
      - name: Build
        env:
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          MAVEN_CENTRAL_STAGING_PROFILE_ID: ${{ secrets.MAVEN_CENTRAL_STAGING_PROFILE_ID }}
          MAVEN_CENTRAL_SIGNING_KEY_ID: ${{ secrets.MAVEN_CENTRAL_SIGNING_KEY_ID }}
          CI_GITHUB_ACCESS_TOKEN: ${{ secrets.CI_GITHUB_ACCESS_TOKEN }}
          CI_AWS_ACCESS_ID: ${{ secrets.CI_AWS_ACCESS_ID }}
          CI_AWS_SECRET_KEY: ${{ secrets.CI_AWS_SECRET_KEY }}
          TAG_NAME: ${{ env.TAG_NAME }}
        run: .ci/ci-main.sh normal
      - name: Upload test report
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: junit-test-report
          path: ./simplified-tests/build/reports/tests/testDebugUnitTest/
