import org.librarysimplified.gradle.RequiredAssetsTask

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

// Fail the build if these assets aren't present
//
def requiredFiles = [:]
requiredFiles["ReaderClientCert.sig"] =
  "58fe2fb9e6a352c54311da8ee91a8dbb8295138b630ee764164770e5b0a85b1b"
requiredFiles["secrets.conf"] =
  "9c211ae0d153c29b72baab3bfad9de6c5cecb6b39bcda8206d36a65aaca0db21"

android {
  defaultConfig {
    versionName = project.version
    versionCode = calculateVersionCode(project)
    setProperty("archivesBaseName", "palace")
  }
  applicationVariants.all { variant ->
    def finalizerTask =
      tasks.create(name: "requiredFiles${variant.name.capitalize()}", type: RequiredAssetsTask) {
        required = requiredFiles
        apkFiles = variant.outputs.collect { out ->
          out.outputFile
        }
      }
    variant.assembleProvider.configure {
      finalizedBy finalizerTask
    }
  }
}

dependencies {
  implementation project(":simplified-main")
  implementation project(":simplified-accounts-source-nyplregistry")
  implementation project(":simplified-analytics-circulation")
  implementation project(":simplified-crashlytics")

  implementation libs.firebase.analytics
  implementation libs.firebase.crashlytics
  implementation libs.palace.drm.adobe
  implementation libs.nypl.drm.core
  implementation libs.nypl.readium
  implementation libs.palace.findaway

  implementation (libs.readium.lcp) {
    artifact {
      type = "aar"
    }
  }
}
